/*
 * This file is part of the Reproducible Open Benchmarks for Data Analysis
 * Platform (ROB).
 *
 * Copyright (C) [2019-2020] NYU.
 *
 * ROB is free software; you can redistribute it and/or modify it under the
 * terms of the MIT License; see LICENSE file for more details.
 */

import {
    FETCH_LEADERBOARD_ERROR, FETCH_LEADERBOARD_START,
    FETCH_LEADERBOARD_SUCCESS
} from '../actions/Benchmark';


 /**
  * The benchmark leaderboard state contains the current benchmark ranking as
  * well as information about resources that were generated by as additional
  * metrics for the runs in the leaderboard.
  */
const INITIAL_STATE = {
    fetchError: null,
    isFetching: false,
    postProcRun: null,
    ranking: null,
    schema: null
}


 const leaderboard = (state = INITIAL_STATE, action) => {
     switch (action.type) {
         case FETCH_LEADERBOARD_ERROR:
            return {...state, isFetching: false, fetchError: action.payload};
         case FETCH_LEADERBOARD_START:
            return {...state, isFetching: true};
         case FETCH_LEADERBOARD_SUCCESS:
             return {
                 ...state,
                 ranking: action.payload.ranking,
                 postProcRun: action.payload.postProc,
                 schema: action.payload.schema,
                 isFetching: false,
                 fetchError: null
             };
         default:
             return state
     }
 }

 export default leaderboard;
